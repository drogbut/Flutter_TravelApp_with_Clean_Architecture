import 'package:flutter/material.dart';

/// [TrColors] allows to build all colours used in the travel app.
///
/// If you are having a problem with `Color` wherein it seems your color is just
/// not painting, check to make sure you are specifying the full 8 hexadecimal
/// digits. If you only specify six, then the leading two digits are assumed to
/// be zero, which means fully-transparent:
///
/// ```dart
/// Color c1 = const Color(0xFFFFFF); // fully transparent white (invisible)
/// Color c2 = const Color(0xFFFFFFFF); // fully opaque white (visible)
/// ```
///
/// See also:
///   * [Customizing Material](https://m3.material.io/foundations/customization)
class TrColors {
  TrColors._();

  /// GREY SHADES
  static const Color anthracite = Color(0xFF262626);
  static const Color anthracite40 = Color(0xFFA8A8A8);
  static const Color anthracite30 = Color(0xFFB1B1B1);
  static const Color anthracite20 = Color(0xFFD3D3D3);
  static const Color anthracite10 = Color(0xFFE9E9E9);
  static const Color anthracite5 = Color(0xFFF4F4F4);
  static const Color anthracite1 = Color(0xFFF0F0F0);
  static const Color grey = Color(0xFFE6E6E6);
  static const Color darkGrey = Color(0xFFD8D8D8);
  static const Color lightGrey = Color(0xFFFAFAFA);
  static const Color milk = Color(0xFFFFFFFF);

  /// PRIMARY / SECONDARY / TERTIARY COLORS
  static const Color carrot = Color(0xFFFF4B00);
  static const Color lime = Color(0xFF5EE8A6);
  static const Color lime5 = Color(0xFF54D095);
  static const Color lime20 = Color(0xFF8EEFC0);
  static const Color lime30 = Color(0xFFD8F8E8);

  static const Color aubergine = Color(0xFF580125);
  static const Color aubergine5 = Color(0xFF46011E);
  static const Color aubergine15 = Color(0xFFE6D9DE);
  static const Color aubergine20 = Color(0xFF894C66);
  static const Color aubergine30 = Color(0xFFC69DAE);
  static const Color aubergine40 = Color(0xFFDBCED4);
  static const Color avocado = Color(0xFF004034);
  static const Color avocado5 = Color(0xFF024D1F);
  static const Color avocado30 = Color(0xFF027261);

  /// CATEGORY COLORS
  static const Color aloeVera = Color(0xFF7AACA0);
  static const Color banane = Color(0xFFFFCF05);
  static const Color orange = Color(0xFFFDA801);
  static const Color kiwi = Color(0xFFCAE000);
  static const Color litschi = Color(0xFFDB5C33);
  static const Color himbeere = Color(0xFFFF5C5C);
  static const Color pflaume = Color(0xFFB896FF);

  /// ERROR / WARNING / SUCCESS / INFORMATION
  static const Color error900 = Color(0xFFB24040);
  static const Color error500 = Color(0xFFFF5C5C);
  static const Color error100 = Color(0xFFFFF7F7);

  static const Color warning900 = Color(0xFF7E5300);
  static const Color warning500 = Color(0xFFFDA801);
  static const Color warning100 = Color(0xFFFFFBF2);

  static const Color succes900 = Color(0xFF7A8700);
  static const Color succes500 = Color(0xFFCAE000);
  static const Color succes100 = Color(0xFFFDFEF2);

  static const Color info100 = Color(0xFFF7FEFB);

  /// The PrimarySwatch was still set to a color generated by Flutter.
  /// Since you don't have to pass a color but a material color, you need this method.
  /// You could also do this manually for all shades. I found this solution better,
  /// because we can continue to create MaterialColors with it.
  static MaterialColor createMaterialColor(Color color) {
    List strengths = <double>[.05];
    final swatch = <int, Color>{};
    final int r = color.red, g = color.green, b = color.blue;

    for (int i = 1; i < 10; i++) {
      strengths.add(0.1 * i);
    }
    for (var strength in strengths) {
      final double ds = 0.5 - strength;
      swatch[(strength * 1000).round()] = Color.fromRGBO(
        r + ((ds < 0 ? r : (255 - r)) * ds).round(),
        g + ((ds < 0 ? g : (255 - g)) * ds).round(),
        b + ((ds < 0 ? b : (255 - b)) * ds).round(),
        1,
      );
    }
    return MaterialColor(color.value, swatch);
  }
}
